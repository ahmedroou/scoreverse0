rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- Default User Data Rule ---
    // By default, users can manage their own documents and subcollections.
    // This will be overridden by more specific rules below.
    match /users/{userId}/{document=**} {
      allow read, write: if isSignedIn() && isOwner(userId);
    }

    // --- Space Joining & Reading Rules ---

    // Rule 1: Allow a user who is a member of a space to READ its data.
    // This allows members to see the owner's players, games, etc., for that space.
    match /users/{ownerId}/{collection}/{docId} {
      allow read: if isSignedIn() && (
        // You are the owner
        isOwner(ownerId) ||
        // You are a member of one of the owner's spaces
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.joinedSpaces[ownerId] != null)
      );
    }
    
    // Rule 2: Securely allow a user to JOIN a space by adding themselves as a 'viewer'.
    match /users/{ownerId}/spaces/{spaceId} {
      // We only allow 'update' for joining, not 'create' or 'delete'.
      allow update: if isSignedIn() &&
                       // You are not the owner.
                       !isOwner(ownerId) &&
                       // You are only changing the 'members' field.
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) &&
                       // You are only adding yourself to the members map.
                       request.resource.data.members.diff(resource.data.members).affectedKeys().hasOnly([request.auth.uid]) &&
                       // You are adding yourself with the 'viewer' role.
                       request.resource.data.members[request.auth.uid] == 'viewer';
    }

    // --- Other Collections ---
    
    // Allow any signed-in user to read invite codes to verify them.
    match /spaceInvites/{inviteCode} {
        allow read: if isSignedIn();
        allow write: if false; // Writes are handled by owner's app logic, not direct writes.
    }

    // Allow anyone to read public share data.
    match /public_shares/{shareId} {
      allow read: if true;
      allow write: if false; 
    }
  }
}
