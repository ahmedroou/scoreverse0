
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    function getJoiningUserRole() {
      return request.resource.data.members[request.auth.uid];
    }
    function wasMember(spaceData) {
        return request.auth.uid in spaceData.members;
    }

    // --- User Profile and Public Share Rules ---
    match /users/{userId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isOwner(userId);
    }
    match /public_shares/{shareId} {
      allow read: if true;
      allow write: if false;
    }
    match /spaceInvites/{inviteCode} {
        allow read: if isSignedIn();
    }

    // --- Subcollection Rules ---
    match /users/{ownerId}/{collectionId}/{docId} {
      // Default rule: Owner has full access to their own subcollections.
      allow read, write: if isOwner(ownerId);
      
      // Override for members: Allow members of a space to READ data from the owner's collections.
      allow read: if isSignedIn() && 
                   exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.joinedSpaces[ownerId] != null;
    }

    // --- Space Management Rule Overrides ---
    match /users/{ownerId}/spaces/{spaceId} {
      // This rule allows non-owners to update a space document under very specific conditions.
      allow update: if isSignedIn() && !isOwner(ownerId) &&
      
        // Condition 1: Joining a space.
        // The user is adding themselves to the members map with the 'viewer' role.
        (
          request.writeFields.hasOnly(['members.' + request.auth.uid]) &&
          getJoiningUserRole() == 'viewer'
        ) ||

        // Condition 2: Leaving a space.
        // The user is removing their own ID from the members map.
        (
          wasMember(resource.data) &&
          request.writeFields.hasOnly(['members.' + request.auth.uid]) &&
          getJoiningUserRole() == null // Field is being deleted
        );
    }
  }
}

    