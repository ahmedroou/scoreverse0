
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- HELPER FUNCTIONS ---
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isSpaceMember(ownerId, spaceId, requiredRole) {
      if (spaceId == null) { return false; }
      let spaceData = get(/databases/$(database)/documents/users/$(ownerId)/spaces/$(spaceId)).data;
      if (!('members' in spaceData)) { return false; }
      let userRole = spaceData.members[request.auth.uid];
      if (requiredRole == 'viewer') { return userRole in ['viewer', 'editor', 'owner']; }
      if (requiredRole == 'editor') { return userRole in ['editor', 'owner']; }
      if (requiredRole == 'owner') { return userRole == 'owner'; }
      return false;
    }

    // --- USER PROFILE RULES ---
    match /users/{userId} {
      allow list: if isAdmin();
      allow get: if isAdmin() || isOwner(userId);
      allow create, update: if isOwner(userId);
      allow delete: if isAdmin() && !isOwner(userId);
    }

    // --- SPACE & DATA SUBCOLLECTION RULES ---
    // This combined rule handles spaces, players, games, matches, tournaments
    match /users/{ownerId}/{subcollection}/{docId} {
      // 1. Allow owners to do anything with their data
      // 2. Allow admins to read anything
      // 3. Allow space members to read data from a space they belong to
      allow read: if isOwner(ownerId) || isAdmin() || (resource.data.spaceId != null && isSpaceMember(ownerId, resource.data.spaceId, 'viewer'));
      
      // 1. Allow owners to write to their data
      // 2. Allow space editors to write to data in a space they belong to
      allow write: if isOwner(ownerId) || (resource.data.spaceId != null && isSpaceMember(ownerId, resource.data.spaceId, 'editor'));
    }

    // --- SPACE LINK RULES ---
    // This handles the link document in an invitee's account
    match /users/{inviteeId}/spaces/{spaceId} {
      allow get: if isOwner(inviteeId);
      allow delete: if isOwner(inviteeId);
      // Let the original space owner create/update the link doc
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(inviteeId)/spaces/$(spaceId)).data.ownerId == request.auth.uid;
    }

    // --- PUBLIC SHARE RULES ---
    match /public_shares/{shareId} {
      allow get: if true;
      allow write: if false;
    }
  }
}
