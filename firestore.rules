
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'users' collection itself
    match /users/{userId} {
      // A user can get their own user document.
      allow get: if request.auth != null && request.auth.uid == userId;
      
      // An admin can get any user's document.
      allow get: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;

      // An admin can list all user documents.
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      
      // A user can update their own document.
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // An admin can delete any user document.
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      
      // A user can create their own document upon signup.
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for all subcollections within a user's document (players, games, etc.)
    match /users/{userId}/{document=**} {
      // A user can read and write to their own subcollections.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rules for public share data
    match /public_shares/{shareId} {
      // Anyone can read shared data.
      allow read: if true;
      // Nobody can write directly to public shares.
      allow write: if false;
    }
  }
}
